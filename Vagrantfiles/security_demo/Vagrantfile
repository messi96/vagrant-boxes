# -*- mode: ruby -*-
# vi: set ft=ruby :

VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  # Workaround for https://github.com/mitchellh/vagrant/issues/5219
  config.ssh.insert_key = false

  config.vm.provider "virtualbox" do |v|
    v.customize ["modifyvm", :id, "--biosbootmenu", "disabled"]
    v.customize ["modifyvm", :id, "--bioslogodisplaytime", "0"]
    v.customize ["modifyvm", :id, "--bioslogofadein", "off"]
    v.customize ["modifyvm", :id, "--bioslogofadeout", "off"]
    v.customize ["modifyvm", :id, "--ioapic", "on"]
    v.customize ["modifyvm", :id, "--natdnsproxy1", "off"]
    v.customize ["modifyvm", :id, "--natdnshostresolver1", "off"]
  end

  # demo1
  config.vm.define "demo1", primary: true do |demo1|
    demo1.vm.box = "waratek/security_demo"
    demo1.vm.box_url = "https://s3-eu-west-1.amazonaws.com/waratek-vagrant-boxes/waratek_security_demo.json"
    demo1.vm.hostname = "demo1.example.com"

    demo1.vm.network "private_network", ip: "172.21.21.21"
    #demo1.vm.network "public_network"
    demo1.vm.network "forwarded_port", guest: 6060, host: 6060 # Tomcat 6
    demo1.vm.network "forwarded_port", guest: 8080, host: 8080 # Tomcat 7
    demo1.vm.network "forwarded_port", guest: 9090, host: 9090 # httpd

    demo1.vm.synced_folder "../../synced_folder", "/synced_folder"
    demo1.vm.synced_folder "../../puppet/hieradata", "/tmp/hieradata"
    
    demo1.vm.provider "virtualbox" do |v|
      v.name = "Waratek_demo1"
      v.cpus = 2
      v.memory = 2048
    end

    demo1.vm.provider "vmware_fusion" do |v|
      v.vmx["memsize"] = "2048"
      v.vmx["numvcpus"] = "2"
    end

    # AWS
    demo1.vm.provider "aws" do |aws,override|
      override.vm.box = "waratek/aws-rhel6-PV"
      override.vm.box_version = ">= 0"
      aws.access_key_id = ENV['AWS_ACCESS_KEY']
      aws.secret_access_key = ENV['AWS_SECRET_KEY']
      aws.keypair_name = ENV['AWS_KEYPAIR_NAME']
      aws.security_groups = ['default']
      aws.region = ENV['AWS_REGION']
      aws.instance_type = "m3.medium"
      aws.block_device_mapping = [{ 'DeviceName' => '/dev/sda1', 'Ebs.VolumeSize' => 15 }]
      override.ssh.private_key_path = ENV['AWS_PRIVATE_KEY_PATH']
      override.ssh.username = "vagrant"

      aws.user_data = File.read("../../scripts/cloud-init.sh")
      aws.tags = {
          'Name' => 'Waratek Security Demo',
          'User' => ENV['USER']
      }
    end

    config.vm.provision "shell", path: "../../scripts/puppet-bootstrap.sh"
    config.vm.provision "shell", path: "../../scripts/epel-bootstrap.sh"

    demo1.vm.provision "puppet", run: "always" do |puppet|
      puppet.manifests_path = "../../puppet/manifests"
      puppet.manifest_file = "site.pp"
      puppet.module_path = "../../puppet/modules"
      puppet.hiera_config_path = "../../puppet/hiera.yaml"
      #puppet.options = "--verbose --debug"
      puppet.facter = {
        "role"        => "security_demo_centos",
        "vagrant"     => "true",
        "vagrantuser" => "vagrant",
      }
    end
  end

  # demo2
  config.vm.define "demo2", autostart: false  do |demo2|
    demo2.vm.box = "waratek/security_demo"
    demo2.vm.box_url = "https://s3-eu-west-1.amazonaws.com/waratek-vagrant-boxes/waratek_security_demo.json"
    demo2.vm.hostname = "demo2.example.com"

    demo2.vm.network "private_network", ip: "172.21.21.22"
    #demo2.vm.network "public_network"

    demo2.vm.synced_folder "../../synced_folder", "/synced_folder"
    demo2.vm.synced_folder "../../puppet/hieradata", "/tmp/hieradata"
    
    demo2.vm.provider "virtualbox" do |v|
      v.name = "Waratek_demo2"
      v.cpus = 2
      v.memory = 2048
    end

    demo2.vm.provider "vmware_fusion" do |v|
      v.vmx["memsize"] = "2048"
      v.vmx["numvcpus"] = "2"
    end

    demo2.vm.provision "puppet", run: "always" do |puppet|
      puppet.manifests_path = "../../puppet/manifests"
      puppet.manifest_file = "site.pp"
      puppet.module_path = "../../puppet/modules"
      puppet.hiera_config_path = "../../puppet/hiera.yaml"
      #puppet.options = "--verbose --debug"
      puppet.facter = {
        "role"        => "security_demo_centos",
        "vagrant"     => "true",
        "vagrantuser" => "vagrant",
      }
    end
  end

  # Kali
  config.vm.define "kali", autostart: false do |kali|
    kali.vm.box = "waratek/kali-mini"
    kali.vm.box_version = "~> 1.0"
    kali.vm.guest = "debian"
    kali.vm.hostname = "kali.example.com"
    kali.ssh.username = "root"

    kali.vm.network "private_network", ip: "172.21.21.30"
    #kali.vm.network "public_network"
    kali.vm.network "forwarded_port", guest: 3790, host: 3790

    kali.vm.synced_folder "../../synced_folder", "/synced_folder"
    kali.vm.synced_folder "../../puppet/hieradata", "/tmp/hieradata"
    
    kali.vm.provider "virtualbox" do |v|
      v.name = "Waratek_kali"
      v.cpus = 2
      v.memory = 2048
    end

    kali.vm.provider "vmware_fusion" do |v|
      v.vmx["memsize"] = "2048"
      v.vmx["numvcpus"] = "2"
    end

    kali.vm.provision "puppet", run: "always" do |puppet|
      puppet.manifests_path = "../../puppet/manifests"
      puppet.manifest_file = "site.pp"
      puppet.module_path = "../../puppet/modules"
      puppet.hiera_config_path = "../../puppet/hiera.yaml"
      #puppet.options = "--verbose --debug"
      puppet.facter = {
        "role"        => "security_demo_kali"
      }
    end
  end

  # Monitor
  config.vm.define "monitor", autostart: false  do |monitor|
    monitor.vm.box = "waratek/centos6-x86_64"
    monitor.vm.box_version = "~> 1.0"
    monitor.vm.hostname = "monitor.example.com"

    monitor.vm.network "private_network", ip: "172.21.21.40"
    #monitor.vm.network "public_network"
    monitor.vm.network "forwarded_port", guest: 8000, host: 8000 # Splunk

    monitor.vm.synced_folder "../../synced_folder", "/synced_folder"
    monitor.vm.synced_folder "../../puppet/hieradata", "/tmp/hieradata"
    
    monitor.vm.provider "virtualbox" do |v|
      v.name = "Waratek_monitor"
      v.cpus = 2
      v.memory = 2048
    end

    monitor.vm.provider "vmware_fusion" do |v|
      v.vmx["memsize"] = "2048"
      v.vmx["numvcpus"] = "2"
    end

    monitor.vm.provision "puppet", run: "always" do |puppet|
      puppet.manifests_path = "../../puppet/manifests"
      puppet.manifest_file = "site.pp"
      puppet.module_path = "../../puppet/modules"
      puppet.hiera_config_path = "../../puppet/hiera.yaml"
      #puppet.options = "--verbose --debug"
      puppet.facter = {
        "role"        => "security_demo_monitor"
      }
    end
  end

end
