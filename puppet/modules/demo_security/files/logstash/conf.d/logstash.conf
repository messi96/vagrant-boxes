input {
  file {
    path => "/var/log/httpd/access_log"
    type => "apache_access"
  }
}
input {
  file {
    path => "/opt/apache-tomcat/tomcat7/logs/localhost_access_log.*"
    type => "tomcat"
  }
}
input {
  file {
    path => "/home/vagrant/demo/log/rules.log"
    type => "waratek_security"
  }
}
filter {
  if [type] == "apache_access" {
    grok {
      match => { "message" => "%{COMBINEDAPACHELOG}" }
    }
    date {
      match => [ "timestamp" , "dd/MMM/yyyy:HH:mm:ss Z" ]
    }
  }
}
filter {
  if [type] == "tomcat" {
    grok {
      match => { "message" => "%{COMMONAPACHELOG}" }
    }
    date {
      match => [ "timestamp" , "dd/MMM/yyyy:HH:mm:ss Z" ]
    }
  }
}
filter {
  if [type] == "waratek_security" {
    grok {
      match => { "message" => "%{TIMESTAMP_ISO8601:timestamp} %{WORD:log_level} %{WORD:rule_action} %{NOTSPACE:jvc_name} %{WORD:rule_category}:%{WORD:rule_subcategory} \[%{DATA:rule_parameter}\] - \[%{DATA:rule_data}\]" }
    }

    date {
      match => [ "timestamp" , "yyyy-MM-dd HH:mm:ss,SSS" ]
    }

    if [rule_category] == "sqli" {
      mutate {
        add_field => { "severity" => "critical" }
      }
    }


    if [log_level] == "TRACE" {
      grok {
        match => { "message" => "(?<stack_trace_raw>\{\"stackTrace.*)\]" }
      }
      json {
        source => "stack_trace_raw"
        remove_field => "stack_trace_raw"
      }
    }



  }
}
output {
  elasticsearch {
    hosts => "monitor"
  }
  stdout { codec => rubydebug }
}
